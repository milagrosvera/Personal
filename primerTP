#include <iostream>

using namespace std;

void mostrarvec(int vec[], int dim);
void reverso(int vi[],int vf[], int dim);
void mostrarmat(int m[][5], int dfil);
void transpuesta(int m[][5],int mf[][5],int dfila);



int main()
{
    const int dim5 {5};
    const int dim10 {10};

    int vec5[dim5] {4, 11, 19, 8, 3};
    int vec10[dim10] {23, 15, 1, 7, 6, 27, 2, 14, 12, 9};

    int matriz[dim5][dim5] {36, 7, 19, 28, 45,
                            17, 33, 42, 3, 25,
                            22, 41, 32, 11, 9,
                            39, 47, 14, 4, 23,
                            16, 38, 8, 27, 44};
     int matrizaux[dim5][dim5];                      


    int vec5aux[dim5];
    int vec10aux[dim10];

    mostrarvec(vec5, dim5);
    reverso(vec5aux,vec5, dim5);
    mostrarvec(vec5aux, dim5);

cout << "\n============================\n" << endl;

     mostrarvec(vec10, dim10);
    reverso(vec10aux,vec10, dim10);
    mostrarvec(vec10aux, dim10);

cout << "\n============================\n" << endl;

 ;
    cout << "Matriz Original: " << endl;
        mostrarmat(matriz,dim5);
        cout <<"\n"<< endl;
    cout << "Matriz Transpuesta: " << endl;
        transpuesta(matrizaux, matriz,dim5);
        mostrarmat(matrizaux,dim5);

    return 0;
}
void mostrarvec(int vec[], int dim)
{
	for (int i = 0; i < dim; ++i)
		cout << vec[i] << '\t';
    cout << endl;
}

void reverso(int vi[],int vf[], int dim){
        
        for(int i = 0 ; i < dim; i++){
            vi[i] = vf[dim -1 - i];
        }
        
}
void mostrarmat(int m[][5], int dfil)
{
        const int dcol = 5; 

        for (int i = 0; i < dfil; ++i) {
                for (int j = 0; j < dcol; ++j)
                        cout << m[i][j] << '\t';
                cout << endl;
        }

}

void transpuesta(int m[][5],int mf[][5],int dfila){
        const int dcol = 5;
        for (int i = 0; i < dfila; ++i) {
                for (int j = 0; j < dcol; ++j)
                        
             m[i][j] = mf[j ][i];
        }
}
